version: "3.3"

#Define services
services:

  # #MySql Database for application
  # mysql-db:
  #   image: mysql
  #   restart: always
  #   container_name: mysql-db
  #   #Environment variable for password and default database
  #   environment:
  #     MYSQL_ROOT_PASSWORD: '123456'
  #     MYSQL_DATABASE: 'tutorials'
  #   ports:
  #     - 3306:3306 #Forwars the exposed port 3306 on the container to port 3306 on the host machine
  #   networks:
  #     mynetwork:
  #       ipv4_address: 10.0.0.2


  #Back-end Spring Boot Application
  springboot-app:
    #The docker file in BE, build the jar and provides the docker image.
    build: ./spring-boot-server
    container_name: springboot-app
    #Environment variable for Spring Boot Application.
    environment:
      MYSQL_HOST: 'mysql-db'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: '123456'
      MYSQL_DATABASE: 'tutorials'
    ports:
      - 8080:8080 #Forwars the exposed port 8080 on the container to port 8080 on the host machine
    networks:
      - webapp_mynetwork
        # ipv4_address: 10.0.0.3
    # depends_on:
    #   - mysql-db



  angular-app:
    #The docker file in FE, builds and provides the docker image.
    build: ./angular-8-client
    container_name: angular-app
    ports:
      - 8081:8081 #Forwars the exposed port 8081 on the container to port 8081 on the host machine
    networks:
      - webapp_mynetwork
        #ipv4_address: 10.0.0.4  

networks:
  webapp_mynetwork:
    external: true
#     driver: bridge
#     ipam:
#       driver: default
#       config:
#         - subnet: 10.0.0.0/24
